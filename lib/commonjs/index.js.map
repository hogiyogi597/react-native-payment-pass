{"version":3,"sources":["index.tsx"],"names":["AddPaymentPassStatus","PaymentPass","PaymentPassModule","NativeModules","noop","addPaymentPass","cardHolderName","lastFour","paymentNetwork","paymentReferenceId","successCallback","errorCallback","finalizeAddCard","encryptedPassData","activationData","ephemeralPublicKey"],"mappings":";;;;;;;AAAA;;IAEYA,oB;;;WAAAA,oB;AAAAA,EAAAA,oB;AAAAA,EAAAA,oB;AAAAA,EAAAA,oB;GAAAA,oB,oCAAAA,oB;;AA4CZ,MAAM;AAAEC,EAAAA,WAAW,EAAEC;AAAf,IAAqCC,0BAA3C;;AAEA,SAASC,IAAT,GAAsB,CAAE;;AAExB,MAAMC,cAA8B,GAAG,CACrCC,cADqC,EAErCC,QAFqC,EAGrCC,cAHqC,EAIrCC,kBAJqC,EAKrCC,eALqC,EAMrCC,aANqC,KAOlC;AACHT,EAAAA,iBAAiB,CAACG,cAAlB,CACEC,cADF,EAEEC,QAFF,EAGEC,cAHF,EAIEC,kBAJF,EAKEC,eALF,EAMEC,aAAa,GAAGA,aAAH,GAAmBP,IANlC;AAQD,CAhBD;;AAkBA,MAAMQ,eAAgC,GAAG,CACvCC,iBADuC,EAEvCC,cAFuC,EAGvCC,kBAHuC,EAIvCL,eAJuC,EAKvCC,aALuC,KAMpC;AACHT,EAAAA,iBAAiB,CAACU,eAAlB,CACEC,iBADF,EAEEC,cAFF,EAGEC,kBAHF,EAIEL,eAJF,EAKEC,aAAa,GAAGA,aAAH,GAAmBP,IALlC;AAOD,CAdD;;AAgBA,MAAMH,WAAW,GAAG,EAAE,GAAGC,iBAAL;AAAwBG,EAAAA,cAAxB;AAAwCO,EAAAA;AAAxC,CAApB;eAEeX,W","sourcesContent":["import { NativeModules } from 'react-native';\n\nexport enum AddPaymentPassStatus {\n  CAN_ADD = 'CAN_ADD',\n  ALREADY_ADDED = 'ALREADY_ADDED',\n  BLOCKED = 'BLOCKED',\n}\n\nexport interface DigitalWalletProvisionRequestParams {\n  device_type: string;\n  certificates: string[];\n  nonce: string;\n  nonce_signature: string;\n  app_version: string;\n}\n\ntype CanAddPaymentPass = (\n  paymentReferenceId: string\n) => Promise<AddPaymentPassStatus>;\n\ntype AddPaymentPass = (\n  cardHolderName: string,\n  lastFour: string,\n  paymentNetwork: string,\n  paymentReferenceId: string,\n  successCallback: (params: DigitalWalletProvisionRequestParams) => void,\n  errorCallback?: (error: string) => void\n) => void;\n\ntype FinalizeAddCard = (\n  encryptedPassData: string,\n  activationData: string,\n  ephemeralPublicKey: string,\n  successCallback: () => void,\n  errorCallback?: (error: string) => void\n) => void;\n\ntype RemoveSuspendedCard = (paymentReferenceId: string) => Promise<void>;\n\ntype PaymentPassType = {\n  canAddPaymentPass: CanAddPaymentPass;\n  addPaymentPass: AddPaymentPass;\n  finalizeAddCard: FinalizeAddCard;\n  removeSuspendedCard: RemoveSuspendedCard;\n};\n\nconst { PaymentPass: PaymentPassModule } = NativeModules;\n\nfunction noop(): void {}\n\nconst addPaymentPass: AddPaymentPass = (\n  cardHolderName,\n  lastFour,\n  paymentNetwork,\n  paymentReferenceId,\n  successCallback,\n  errorCallback\n) => {\n  PaymentPassModule.addPaymentPass(\n    cardHolderName,\n    lastFour,\n    paymentNetwork,\n    paymentReferenceId,\n    successCallback,\n    errorCallback ? errorCallback : noop\n  );\n};\n\nconst finalizeAddCard: FinalizeAddCard = (\n  encryptedPassData,\n  activationData,\n  ephemeralPublicKey,\n  successCallback,\n  errorCallback\n) => {\n  PaymentPassModule.finalizeAddCard(\n    encryptedPassData,\n    activationData,\n    ephemeralPublicKey,\n    successCallback,\n    errorCallback ? errorCallback : noop\n  );\n};\n\nconst PaymentPass = { ...PaymentPassModule, addPaymentPass, finalizeAddCard };\n\nexport default PaymentPass as PaymentPassType;\n"]}